name: Feature Test
on:
  push:
    branches:
      - feature/**
      - main
jobs:
  #sfdx_scanner:
  #  name: "Run SFDX Scanner PMD"
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Install sfdx
  #      run: |
  #        mkdir sfdx
  #        wget -qO- https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz | tar xJ -C sfdx --strip-components 1
  #        ./sfdx/install
  #        sfdx plugins:install @salesforce/sfdx-scanner
  #    - name: Run Analysis
  #      run: |
  #        sfdx scanner:run -t dlrs -e pmd -f junit -s 2 > results.xml
  #    - name: Store Test Results
  #      uses: actions/upload-artifact@v1
  #      with:
  #        name: sfdx-source-scanner-results.xml
  #        path: results.xml
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"
      - name: Determine Node Version
        id: node-version
        run: |
          echo "::set-output name=ver::$(node --version)"
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ steps.node-version.outputs.ver }}-${{ hashFiles('package.json', 'package-lock.json') }}
      - name: Install Packages
        run: |
          npm install
      - name: prettier
        run: |
          npx prettier "**/*.{cls,cmp,component,css,html,js,json,md,page,trigger,xml,yaml,yml}" --check
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"
      - name: Determine Node Version
        id: node-version
        run: |
          echo "::set-output name=ver::$(node --version)"
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ steps.node-version.outputs.ver }}-${{ hashFiles('package.json', 'package-lock.json') }}
      - name: Install Packages
        run: |
          npm install
      - name: eslint
        run: |
          npx eslint "**/{aura,lwc}/**"
